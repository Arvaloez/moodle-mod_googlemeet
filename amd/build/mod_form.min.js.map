{"version":3,"file":"mod_form.min.js","sources":["../src/mod_form.js"],"sourcesContent":["/* eslint-disable */\r\n\r\ndefine([\r\n  'core/notification',\r\n  'core/str'\r\n], function(notification, str) {\r\n\r\n  window.requirejs.config({\r\n    paths: 'https://accounts.google.com/gsi/client'\r\n  })\r\n\r\n  return {\r\n    init: function(clientId, apiKey, userTimeZone) {\r\n      // Array of API discovery doc URLs for APIs used by the quickstart\r\n      var discoveryDocs = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\r\n\r\n      // Authorization scopes required by the API\r\n      var scope = 'https://www.googleapis.com/auth/calendar.events';\r\n\r\n      // Load strings\r\n      var requiredfield = '';\r\n      var strcheckweekdays = '';\r\n      var invalideventendtime = '';\r\n      var invalideventenddate = '';\r\n      var timeahead = '';\r\n      str.get_strings([\r\n        {key: 'requirednamefield', component: 'mod_googlemeet'},\r\n        {key: 'checkweekdays', component: 'mod_googlemeet'},\r\n        {key: 'invalideventendtime', component: 'mod_googlemeet'},\r\n        {key: 'invalideventenddate', component: 'mod_googlemeet'},\r\n        {key: 'timeahead', component: 'mod_googlemeet'},\r\n      ]).done(function(strs) {\r\n        requiredfield = strs[0];\r\n        strcheckweekdays = strs[1];\r\n        invalideventendtime = strs[2];\r\n        invalideventenddate = strs[3];\r\n        timeahead = strs[4];\r\n      }).fail(notification.exception);\r\n\r\n      // Elements references\r\n      var generateUrlRoomButton = document.getElementById('id_generateurlroom');\r\n      var urlFieldHidden = document.getElementById('id_url');\r\n      var urlViewerField = document.getElementById('id_url_viewer');\r\n      var originalNameFieldHidden = document.getElementById('id_originalname');\r\n      var creatorEmailFieldHidden = document.getElementById('id_creatoremail');\r\n      var form = document.querySelector('#region-main .mform');\r\n      /**\r\n       *  Initializes the API client library and sets up sign-in state\r\n       *  listeners.\r\n       */\r\n      function initClient() {\r\n        gapi.client.init({\r\n          // apiKey: apiKey,\r\n          // clientId: clientId,\r\n          // discoveryDocs: discoveryDocs,\r\n          // scope: scope\r\n        }).then(function() {\r\n          gapi.client.load\r\n          generateUrlRoomButton.onclick = handleCreateEvent;\r\n          generateUrlRoomButton.disabled = false;\r\n          return;\r\n        }).catch(function(error) {\r\n          generateUrlRoomButton.disabled = true;\r\n          appendPre(JSON.stringify(error, null, 2));\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Returns date formatted in yyyy-mm-dd format\r\n       *\r\n       * @param {string} name name of date filed in formdata\r\n       * @param {boolean} format if it is to return the formatted date\r\n       * @return {string} The formatted date\r\n       */\r\n      function getDateString(name, format) {\r\n        var formData = new FormData(form);\r\n        var year = formData.get(name + '[year]');\r\n        var month = formData.get(name + '[month]');\r\n        var day = formData.get(name + '[day]');\r\n\r\n        month = ('0' + month).slice(-2);\r\n        day = ('0' + day).slice(-2);\r\n\r\n        if (format) {\r\n          return year + '-' + month + '-' + day;\r\n        }\r\n\r\n        return year + month + day;\r\n      }\r\n\r\n      /**\r\n       * Checks whether the selected day of the week exists within the start and end dates\r\n       * @return {boolean}\r\n       */\r\n      function checkweekdays() {\r\n        var formData = new FormData(form);\r\n\r\n        var starthour = formData.get('starthour');\r\n        var startminute = formData.get('startminute');\r\n        var endhour = formData.get('endhour');\r\n        var endminute = formData.get('endminute');\r\n\r\n        starthour = ('0' + starthour).slice(-2);\r\n        startminute = ('0' + startminute).slice(-2);\r\n        endhour = ('0' + endhour).slice(-2);\r\n        endminute = ('0' + endminute).slice(-2);\r\n\r\n        var starttime = starthour + ':' + startminute + ':00';\r\n        var endtime = endhour + ':' + endminute + ':00';\r\n\r\n        var eventdate = getDateString('eventdate', true) + ' ' + starttime;\r\n        var eventenddate = getDateString('eventenddate', true) + ' ' + endtime;\r\n\r\n        var daysofweek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n        var start = new Date(eventdate);\r\n        var end = new Date(eventenddate);\r\n\r\n        var found = false;\r\n        while (start <= end) {\r\n          if (!found) {\r\n            for (var i = 0; i <= daysofweek.length; i++) {\r\n              var currentday = daysofweek[start.getDay()];\r\n              var formday = formData.get('days[' + daysofweek[i] + ']');\r\n              if (formday && currentday === daysofweek[i]) {\r\n                found = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          start = new Date(start.setDate(start.getDate() + 1));\r\n        }\r\n\r\n        return found;\r\n      }\r\n\r\n      /**\r\n       * Validates form data\r\n       * @return {boolean}\r\n       */\r\n      function validate() {\r\n        var valid = true;\r\n        var formData = new FormData(form);\r\n\r\n        // The name is required\r\n        var nameInput = document.getElementById('id_name');\r\n        var nameError = document.getElementById('id_error_name');\r\n        if (formData.get('name').trim().length === 0) {\r\n          nameInput.classList.add('is-invalid');\r\n          nameInput.focus();\r\n          nameError.innerText = '- ' + requiredfield;\r\n          nameError.style.display = \"block\";\r\n          return false;\r\n        } else {\r\n          nameInput.classList.remove('is-invalid');\r\n          nameError.innerText = '';\r\n          nameError.style.display = \"none\";\r\n        }\r\n\r\n        // The end time cannot be less than the start time\r\n        var eventTimeError = document.getElementById('id_googlemeet_eventtime_error');\r\n        var starttime = formData.get('starthour') * 3600 + formData.get('startminute') * 60;\r\n        var endtime = formData.get('endhour') * 3600 + formData.get('endminute') * 60;\r\n        if (endtime < starttime) {\r\n          eventTimeError.innerText = invalideventendtime;\r\n          eventTimeError.style.display = \"block\";\r\n          document.getElementById('id_endhour').focus();\r\n          return false;\r\n        } else {\r\n          eventTimeError.innerText = '';\r\n          eventTimeError.style.display = \"none\";\r\n        }\r\n\r\n        // The end date cannot be less than the start date\r\n        var eventdate = Math.floor(new Date(getDateString('eventdate', true)).getTime() / 1000);\r\n        var eventenddate = Math.floor(new Date(getDateString('eventenddate', true)).getTime() / 1000);\r\n        var eventenddateerror = document.getElementById('id_googlemeet_eventenddategroup_error');\r\n        if (\r\n          formData.get('addmultiply') &&\r\n          eventdate !== 0 &&\r\n          eventenddate !== 0 &&\r\n          eventenddate < eventdate\r\n        ) {\r\n          eventenddateerror.innerText = invalideventenddate;\r\n          eventenddateerror.style.display = \"block\";\r\n          document.getElementById('id_eventenddate_day').focus();\r\n          return false;\r\n        } else if (\r\n          // The event period cannot be longer than one year\r\n          formData.get('addmultiply') &&\r\n          Math.ceil((eventenddate - eventdate) / 31536000) > 1\r\n        ) {\r\n          eventenddateerror.innerText = timeahead;\r\n          eventenddateerror.style.display = \"block\";\r\n          document.getElementById('id_eventenddate_day').focus();\r\n          return false;\r\n        } else {\r\n          eventenddateerror.innerText = '';\r\n          eventenddateerror.style.display = \"none\";\r\n        }\r\n\r\n        // The days of the week must fall within the date range of the event.\r\n        if (formData.get('addmultiply')) {\r\n          var dayserror = document.getElementById('id_googlemeet_days_error');\r\n          if (!checkweekdays()) {\r\n            dayserror.innerText = strcheckweekdays;\r\n            dayserror.style.display = \"block\";\r\n            document.getElementById('id_days_Mon').focus();\r\n            return false;\r\n          } else {\r\n            dayserror.innerText = '';\r\n            dayserror.style.display = \"none\";\r\n          }\r\n        }\r\n\r\n        return valid;\r\n      }\r\n\r\n      /**\r\n       * Initializes the creation of the event in Google Calendar\r\n       */\r\n      function handleCreateEvent() {\r\n        hidePre();\r\n\r\n        if (!validate()) {\r\n          return;\r\n        }\r\n\r\n        gapi.auth2.getAuthInstance().signIn({prompt: 'select_account'}).then(function() {\r\n          createEvent();\r\n          return;\r\n        }).catch();\r\n      }\r\n\r\n      /**\r\n       * Displays loading\r\n       *\r\n       * @param {boolean} show if it is to show loading\r\n       */\r\n      function showLoading(show) {\r\n        var generateurlroomLoading = document.getElementById('generateurlroomLoading');\r\n\r\n        if (show) {\r\n          generateurlroomLoading.style.display = \"block\";\r\n          generateUrlRoomButton.disabled = true;\r\n        } else {\r\n          generateurlroomLoading.style.display = \"none\";\r\n          generateUrlRoomButton.disabled = false;\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Concatenates with name a random number\r\n       *\r\n       * @param {string} name\r\n       * @return {string} The formatted name\r\n       */\r\n      function formatName(name) {\r\n        var random = (Math.floor(Math.random() * (9999 - 1111)) + 1111);\r\n        return name + ' (' + random + ')';\r\n      }\r\n\r\n      /**\r\n       * Append a pre-element to the body that contains the message\r\n       * provided as its text node. Used to display API call errors.\r\n       *\r\n       * @param {string} message Text to be placed in pre element.\r\n       */\r\n      function appendPre(message) {\r\n        var pre = document.getElementById('googlemeetcontentlog');\r\n        var textContent = document.createTextNode(message + '\\n');\r\n        pre.style.display = \"block\";\r\n        pre.appendChild(textContent);\r\n      }\r\n\r\n      /**\r\n       * Hide the pre tag\r\n       */\r\n      function hidePre() {\r\n        var pre = document.getElementById('googlemeetcontentlog');\r\n        pre.style.display = \"none\";\r\n        pre.innerHTML = \"\";\r\n      }\r\n\r\n      /**\r\n       * Creates the event on Google Calendar\r\n       */\r\n      function createEvent() {\r\n        var formData = new FormData(form);\r\n\r\n        var starthour = formData.get('starthour');\r\n        var startminute = formData.get('startminute');\r\n        var endhour = formData.get('endhour');\r\n        var endminute = formData.get('endminute');\r\n\r\n        starthour = ('0' + starthour).slice(-2);\r\n        startminute = ('0' + startminute).slice(-2);\r\n        endhour = ('0' + endhour).slice(-2);\r\n        endminute = ('0' + endminute).slice(-2);\r\n\r\n        var eventstarttime = starthour + ':' + startminute + ':00';\r\n        var eventendtime = endhour + ':' + endminute + ':00';\r\n\r\n        var start = {\r\n          dateTime: getDateString('eventdate', true) + 'T' + eventstarttime,\r\n          timeZone: userTimeZone\r\n        };\r\n\r\n        var end = {\r\n          dateTime: getDateString('eventdate', true) + 'T' + eventendtime,\r\n          timeZone: userTimeZone\r\n        };\r\n\r\n        var recurrence = [];\r\n\r\n        if (formData.get('addmultiply')) {\r\n          var interval = 'INTERVAL=' + formData.get('period');\r\n          var until = 'UNTIL=' + getDateString('eventenddate', false) + 'T235959Z';\r\n          var byday = 'BYDAY=';\r\n\r\n          var daysofweek = {\r\n            Sun: 'SU',\r\n            Mon: 'MO',\r\n            Tue: 'TU',\r\n            Wed: 'WE',\r\n            Thu: 'TH',\r\n            Fri: 'FR',\r\n            Sat: 'SA'\r\n          };\r\n\r\n          for (var day in daysofweek) {\r\n            if (formData.get('days[' + day + ']')) {\r\n              byday += daysofweek[day] + ',';\r\n            }\r\n          }\r\n\r\n          recurrence = [\r\n            'RRULE:FREQ=WEEKLY;' + interval + ';' + until + ';' + byday\r\n          ];\r\n        }\r\n\r\n        var name = formatName(formData.get('name'));\r\n        var eventResource = {\r\n          summary: name,\r\n          description: formData.get('introeditor[text]'),\r\n          start: start,\r\n          end: end,\r\n          recurrence: recurrence\r\n        };\r\n\r\n        showLoading(true);\r\n\r\n        gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': eventResource\r\n        }).then(function(response) {\r\n          var event = response.result;\r\n\r\n          var eventPatch = {\r\n            conferenceData: {\r\n              createRequest: {requestId: event.id}\r\n            }\r\n          };\r\n\r\n          gapi.client.calendar.events.patch({\r\n            calendarId: \"primary\",\r\n            eventId: event.id,\r\n            resource: eventPatch,\r\n            sendNotifications: false,\r\n            conferenceDataVersion: 1\r\n          }).then(function(response) {\r\n            var event = response.result;\r\n\r\n            generateUrlRoomButton.remove();\r\n            originalNameFieldHidden.value = name;\r\n            urlFieldHidden.value = event.hangoutLink;\r\n            urlViewerField.value = event.hangoutLink;\r\n            creatorEmailFieldHidden.value = event.creator.email;\r\n\r\n            document.getElementById('id_googlemeet_generateurlgroup_error').style.display = 'none';\r\n\r\n            showLoading(false);\r\n            return;\r\n          }).catch(function(error) {\r\n            appendPre(JSON.stringify(error.result.error, null, 2));\r\n            showLoading(false);\r\n          });\r\n          return;\r\n        }).catch(function(error) {\r\n          appendPre(JSON.stringify(error.result.error, null, 2));\r\n          showLoading(false);\r\n        });\r\n      }\r\n\r\n      /**\r\n       *  On load, called to load the auth2 library and API client library.\r\n       */\r\n      // gapi.load('client', initClient);\r\n\r\n      let access_token = '';\r\n      let client = google.accounts.oauth2.initTokenClient({\r\n        client_id: clientId,\r\n        scope: scope,\r\n        ux_mode: 'popup',\r\n        callback: (response) => {\r\n          var code_receiver_uri = 'YOUR_AUTHORIZATION_CODE_ENDPOINT_URI';\r\n          // Send auth code to your backend platform\r\n          const xhr = new XMLHttpRequest();\r\n          xhr.open('POST', code_receiver_uri, true);\r\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n          xhr.onload = function() {\r\n            console.log('Signed in as: ' + xhr.responseText);\r\n          };\r\n          xhr.send('code=' + response.code);\r\n          // After receipt, the code is exchanged for an access token and\r\n          // refresh token, and the platform then updates this web app\r\n          // running in user's browser with the requested calendar info.\r\n        },\r\n      });\r\n      console.log(client);\r\n      console.log(access_token);\r\n    }\r\n  };\r\n});\r\n"],"names":["define","notification","str","window","requirejs","config","paths","init","clientId","apiKey","userTimeZone","get_strings","key","component","done","strs","fail","exception","document","getElementById","querySelector","client","google","accounts","oauth2","initTokenClient","client_id","scope","ux_mode","callback","response","xhr","XMLHttpRequest","open","setRequestHeader","onload","console","log","responseText","send","code"],"mappings":"AAEAA,iCAAO,CACL,oBACA,aACC,SAASC,aAAcC,YAExBC,OAAOC,UAAUC,OAAO,CACtBC,MAAO,2CAGF,CACLC,KAAM,SAASC,SAAUC,OAAQC,cAa/BR,IAAIS,YAAY,CACd,CAACC,IAAK,oBAAqBC,UAAW,kBACtC,CAACD,IAAK,gBAAiBC,UAAW,kBAClC,CAACD,IAAK,sBAAuBC,UAAW,kBACxC,CAACD,IAAK,sBAAuBC,UAAW,kBACxC,CAACD,IAAK,YAAaC,UAAW,oBAC7BC,MAAK,SAASC,MACCA,KAAK,GACFA,KAAK,GACFA,KAAK,GACLA,KAAK,GACfA,KAAK,MAChBC,KAAKf,aAAagB,WAGOC,SAASC,eAAe,sBAC/BD,SAASC,eAAe,UACxBD,SAASC,eAAe,iBACfD,SAASC,eAAe,mBACxBD,SAASC,eAAe,mBAC3CD,SAASE,cAAc,2BAmW9BC,OAASC,OAAOC,SAASC,OAAOC,gBAAgB,CAClDC,UAAWlB,SACXmB,MAjYU,kDAkYVC,QAAS,QACTC,SAAU,SAACC,cAGHC,IAAM,IAAIC,eAChBD,IAAIE,KAAK,OAHe,wCAGY,GACpCF,IAAIG,iBAAiB,eAAgB,qCACrCH,IAAIG,iBAAiB,mBAAoB,kBACzCH,IAAII,OAAS,WACXC,QAAQC,IAAI,iBAAmBN,IAAIO,eAErCP,IAAIQ,KAAK,QAAUT,SAASU,SAMhCJ,QAAQC,IAAIhB,QACZe,QAAQC,IAtBW"}